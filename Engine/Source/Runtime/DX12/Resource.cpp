#include "Resource.h"

std::vector<DX12FormatInfo> DX12Util::_Formats;

DXGI_FORMAT DX12Util::TranslateFormat(GraphicFormat format)
{
    return DX12Util::_Formats[static_cast<u32>(format)].DXFormat;
}

void DX12Util::Init()
{
    DX12Util::_Formats.clear();
	DX12Util::_Formats.resize(static_cast<u32>(GraphicFormat::MAX));
	using enum GraphicFormat;
	u32 index = 0;
#define DXGIFORMAT(F)  _Formats[index] = { .DXFormat = DXGI_FORMAT_##F }; ++index; 
	    DXGIFORMAT(UNKNOWN)
        DXGIFORMAT(R32G32B32A32_TYPELESS)
        DXGIFORMAT(R32G32B32A32_FLOAT)
        DXGIFORMAT(R32G32B32A32_UINT)
        DXGIFORMAT(R32G32B32A32_SINT)
        DXGIFORMAT(R32G32B32_TYPELESS)
        DXGIFORMAT(R32G32B32_FLOAT)
        DXGIFORMAT(R32G32B32_UINT)
        DXGIFORMAT(R32G32B32_SINT)
        DXGIFORMAT(R16G16B16A16_TYPELESS)
        DXGIFORMAT(R16G16B16A16_FLOAT)
        DXGIFORMAT(R16G16B16A16_UNORM)
        DXGIFORMAT(R16G16B16A16_UINT)
        DXGIFORMAT(R16G16B16A16_SNORM)
        DXGIFORMAT(R16G16B16A16_SINT)
        DXGIFORMAT(R32G32_TYPELESS)
        DXGIFORMAT(R32G32_FLOAT)
        DXGIFORMAT(R32G32_UINT)
        DXGIFORMAT(R32G32_SINT)
        DXGIFORMAT(R32G8X24_TYPELESS)
        DXGIFORMAT(D32_FLOAT_S8X24_UINT)
        DXGIFORMAT(R32_FLOAT_X8X24_TYPELESS)
        DXGIFORMAT(X32_TYPELESS_G8X24_UINT)
        DXGIFORMAT(R10G10B10A2_TYPELESS)
        DXGIFORMAT(R10G10B10A2_UNORM)
        DXGIFORMAT(R10G10B10A2_UINT)
        DXGIFORMAT(R11G11B10_FLOAT)
        DXGIFORMAT(R8G8B8A8_TYPELESS)
        DXGIFORMAT(R8G8B8A8_UNORM)
        DXGIFORMAT(R8G8B8A8_UNORM_SRGB)
        DXGIFORMAT(R8G8B8A8_UINT)
        DXGIFORMAT(R8G8B8A8_SNORM)
        DXGIFORMAT(R8G8B8A8_SINT)
        DXGIFORMAT(R16G16_TYPELESS)
        DXGIFORMAT(R16G16_FLOAT)
        DXGIFORMAT(R16G16_UNORM)
        DXGIFORMAT(R16G16_UINT)
        DXGIFORMAT(R16G16_SNORM)
        DXGIFORMAT(R16G16_SINT)
        DXGIFORMAT(R32_TYPELESS)
        DXGIFORMAT(D32_FLOAT)
        DXGIFORMAT(R32_FLOAT)
        DXGIFORMAT(R32_UINT)
        DXGIFORMAT(R32_SINT)
        DXGIFORMAT(R24G8_TYPELESS)
        DXGIFORMAT(D24_UNORM_S8_UINT)
        DXGIFORMAT(R24_UNORM_X8_TYPELESS)
        DXGIFORMAT(X24_TYPELESS_G8_UINT)
        DXGIFORMAT(R8G8_TYPELESS)
        DXGIFORMAT(R8G8_UNORM)
        DXGIFORMAT(R8G8_UINT)
        DXGIFORMAT(R8G8_SNORM)
        DXGIFORMAT(R8G8_SINT)
        DXGIFORMAT(R16_TYPELESS)
        DXGIFORMAT(R16_FLOAT)
        DXGIFORMAT(D16_UNORM)
        DXGIFORMAT(R16_UNORM)
        DXGIFORMAT(R16_UINT)
        DXGIFORMAT(R16_SNORM)
        DXGIFORMAT(R16_SINT)
        DXGIFORMAT(R8_TYPELESS)
        DXGIFORMAT(R8_UNORM)
        DXGIFORMAT(R8_UINT)
        DXGIFORMAT(R8_SNORM)
        DXGIFORMAT(R8_SINT)
        DXGIFORMAT(A8_UNORM)
        DXGIFORMAT(R1_UNORM)
        DXGIFORMAT(R9G9B9E5_SHAREDEXP)
        DXGIFORMAT(R8G8_B8G8_UNORM)
        DXGIFORMAT(G8R8_G8B8_UNORM)
        DXGIFORMAT(BC1_TYPELESS)
        DXGIFORMAT(BC1_UNORM)
        DXGIFORMAT(BC1_UNORM_SRGB)
        DXGIFORMAT(BC2_TYPELESS)
        DXGIFORMAT(BC2_UNORM)
        DXGIFORMAT(BC2_UNORM_SRGB)
        DXGIFORMAT(BC3_TYPELESS)
        DXGIFORMAT(BC3_UNORM)
        DXGIFORMAT(BC3_UNORM_SRGB)
        DXGIFORMAT(BC4_TYPELESS)
        DXGIFORMAT(BC4_UNORM)
        DXGIFORMAT(BC4_SNORM)
        DXGIFORMAT(BC5_TYPELESS)
        DXGIFORMAT(BC5_UNORM)
        DXGIFORMAT(BC5_SNORM)
        DXGIFORMAT(B5G6R5_UNORM)
        DXGIFORMAT(B5G5R5A1_UNORM)
        DXGIFORMAT(B8G8R8A8_UNORM)
        DXGIFORMAT(B8G8R8X8_UNORM)
        DXGIFORMAT(R10G10B10_XR_BIAS_A2_UNORM)
        DXGIFORMAT(B8G8R8A8_TYPELESS)
        DXGIFORMAT(B8G8R8A8_UNORM_SRGB)
        DXGIFORMAT(B8G8R8X8_TYPELESS)
        DXGIFORMAT(B8G8R8X8_UNORM_SRGB)
        DXGIFORMAT(BC6H_TYPELESS)
        DXGIFORMAT(BC6H_UF16)
        DXGIFORMAT(BC6H_SF16)
        DXGIFORMAT(BC7_TYPELESS)
        DXGIFORMAT(BC7_UNORM)
        DXGIFORMAT(BC7_UNORM_SRGB)
#undef DXGIFORMAT
}

u32 DX12SwapChain::CurrentFrameIndex()
{
    assert(_Handle);
    return _Handle->GetCurrentBackBufferIndex();
}